% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slide.R
\name{StartEnd}
\alias{StartEnd}
\title{Find the starting and ending time points of a spell}
\usage{
StartEnd(data, SpellVar, GroupVar, SpellValue, OnlyStart = FALSE, ...)
}
\arguments{
\item{data}{a data frame object.}

\item{SpellVar}{a character string naming the variable with information on
when each spell starts.}

\item{GroupVar}{a character string naming the variable grouping the units
experiencing the spells. If \code{GroupVar} is missing then .}

\item{SpellValue}{a value indicating when a unit is in a spell. If
\code{SpellValue} is missing then any change in \code{Var}'s value will be
treated as the start/end of a spell. Must specify if \code{OnlyStart = TRUE}.}

\item{OnlyStart}{logical for whether or not to only add a new
\code{Spell_Start} variable. Please see the details.}

\item{...}{Aguments to pass to \code{\link{slide}}.}
}
\value{
a data frame. If \code{OnlyStart = FALSE} then two new variables are
returned:
\itemize{
   \item{Spell_Start: }{The time period year of a given spell.}
   \item{Spell_End: }{The end time period of a given spell.}
}
If \code{OnlyStart = TRUE} then only \code{Spell_Start} is added.
This variable includes both \code{1}'s for the start of a new spell and for
the start of a 'gap spell', i.e. a spell after \code{Spell_End}.
}
\description{
\code{StartEnd} finds the starting and ending time points of a spell,
including for time-series cross-sectional data. Note: your data needs to be
sorted by date. The date should be ascending (i.e. increasing as it moves
down the rows).
}
\examples{
# Create fake data
ID <- sort(rep(seq(1:4), 5))
Time <- rep(1:5, 4)
Dummy <-  c(1, sample(c(0, 1), size = 19, replace = TRUE))
Data <- data.frame(ID, Time, Dummy)

# Find start/end of spells denoted by Dummy = 1
DataSpell <- StartEnd(Data, SpellVar = 'Dummy', GroupVar = 'ID',
                     TimeVar = 'Time', SpellValue = 1)

head(DataSpell)

}
\seealso{
\code{\link{slide}}
}
